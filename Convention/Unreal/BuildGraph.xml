<?xml version='1.0' ?>

<!--
  This is a simplified version of https://src.redpoint.games/redpointgames/unreal-engine-scripts/-/blob/main/Lib/BuildGraph_Project.xml?ref_type=heads
  Demonstrating only how a DSL which never ever should have been XML in the first place can be made
  more digestable with XYXC
-->
<BuildGraph xmlns="http://www.epicgames.com/BuildGraph" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.epicgames.com/BuildGraph ./Schema.xsd" >

  <!-- Environment options -->
  <Option Name="BuildScriptsPath" Restrict=".*" DefaultValue="" Description="Path to the build scripts folder" />
  <Option Name="BuildScriptsLibPath" Restrict=".*" DefaultValue="" Description="Path to the build scripts library folder" />
  <Option Name="EnginePath" Restrict=".*" DefaultValue="" Description="Path to the engine" />
  <Option Name="TempPath" Restrict=".*" DefaultValue="" Description="Path to the temporary directory (must not contain spaces)" />
  <Option Name="ProjectRoot" Restrict=".*" DefaultValue="" Description="Path to the directory that contains the .uproject" />
  <Option Name="RepositoryRoot" Restrict=".*" DefaultValue="" Description="Path to the directory that contains all the project folders and BuildScriptsExtra" />

  <!-- General options -->
  <Option Name="UProjectPath" Restrict=".*" DefaultValue="" Description="Path to the .uproject file" />
  <Option Name="Distribution" Restrict=".*" DefaultValue="" Description="The distribution being built" />
  <Option Name="IsUnrealEngine5" Restrict="true|false" DefaultValue="false" Description="If true, this is an Unreal Engine 5 project" />

  <!-- etc... -->

  <EnvVar Name="AppData" />
  <EnvVar Name="HOME" />

  <Property Name="GameBinaries" Value="" />
  <Property Name="ClientBinaries" Value="" />
  <Property Name="ServerBinaries" Value="" />
  <Property Name="GameCookedContent" Value="" />
  <Property Name="ClientCookedContent" Value="" />
  <Property Name="ServerCookedContent" Value="" />
  <Property Name="GameStaged" Value="" />
  <Property Name="ClientStaged" Value="" />
  <Property Name="ServerStaged" Value="" />
  <Property Name="GauntletTasks" Value="" />
  <Property Name="CustomTasks" Value="" />
  <Property Name="DeploymentTasks" Value="" />
  <Property Name="AdditionalArguments" Value="" If="'$(StrictIncludes)' == 'false'" />
  <Property Name="AdditionalArguments" Value=" -iwyu -NoPCH -NoSharedPCH -DisableUnity" If="'$(StrictIncludes)' == 'true'" />

  <!-- Targets that we will execute on a Windows machine. -->
  <Agent Name="Windows Build" Type="Win64" If="'$(ExecuteBuild)' == 'true'">

    <!-- Compile the editor for Windows (necessary for cook later) -->
    <Node Name="Compile $(EditorTarget) Win64" Produces="#EditorBinaries">
      <ForEach Name="PrepareCustomCompileScript" Values="$(PrepareCustomCompileScripts)">
        <Spawn Exe="powershell.exe" Arguments="-ExecutionPolicy Bypass &quot;$(RepositoryRoot)\$(PrepareCustomCompileScript)&quot;" />
      </ForEach>
      <Compile Target="$(EditorTarget)" Platform="Win64" Configuration="Development" Tag="#EditorBinaries" Arguments="-Project=&quot;$(UProjectPath)&quot; $(AdditionalArguments)" AllowParallelExecutor="false" />
    </Node>

    <!-- Compile the game (targeting the Game target, not Client) -->
    <ForEach Name="TargetName" Values="$(GameTargets)">
      <ForEach Name="TargetPlatform" Values="$(GameTargetPlatforms)">
        <ForEach Name="TargetConfiguration" Values="$(GameConfigurations)">
          <Node Name="Compile $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Produces="#GameBinaries_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="!ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
            <ForEach Name="PrepareCustomCompileScript" Values="$(PrepareCustomCompileScripts)">
              <Spawn Exe="powershell.exe" Arguments="-ExecutionPolicy Bypass &quot;$(RepositoryRoot)\$(PrepareCustomCompileScript)&quot;" />
            </ForEach>
            <Compile Target="$(TargetName)" Platform="$(TargetPlatform)" Configuration="$(TargetConfiguration)" Tag="#GameBinaries_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Arguments="-Project=&quot;$(UProjectPath)&quot; $(AdditionalArguments)"/>
            <Tag Files="#GameBinaries_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Filter="*.target" With="#GameReceipts_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)"/>
            <SanitizeReceipt Files="#GameReceipts_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
          </Node>
          <Property Name="GameBinaries" Value="$(GameBinaries)#GameBinaries_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);"/>
        </ForEach>
      </ForEach>
    </ForEach>

  </Agent>

  <!-- Targets that we will execute on a Windows machine. -->
  <Agent Name="Windows Pak and Stage" Type="Win64" If="'$(ExecuteBuild)' == 'true'">

    <!-- Pak and stage the game (targeting the Game target, not Client) -->
    <ForEach Name="TargetName" Values="$(GameTargets)">
      <ForEach Name="TargetPlatform" Values="$(GameTargetPlatforms)">
        <ForEach Name="TargetConfiguration" Values="$(GameConfigurations)">
          <Node Name="Pak and Stage $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Requires="#GameBinaries_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);#GameCookedContent_$(TargetPlatform)" Produces="#GameStaged_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)"  If="!ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
            <Property Name="StagePlatform" Value="$(TargetPlatform)" />
            <Property Name="StagePlatform" Value="Windows" If="'$(StagePlatform)' == 'Win64'" />
            <Property Name="StagePlatform" Value="$(StagePlatform)NoEditor" If="(('$(StagePlatform)' == 'Windows') or ('$(StagePlatform)' == 'Mac') or ('$(StagePlatform)' == 'Linux')) and ('$(IsUnrealEngine5)' == 'false')" />
            <Property Name="DisableCodeSign" Value="" />
            <Property Name="DisableCodeSign" Value="-NoCodeSign" If="('$(TargetPlatform)' == 'Win64') or ('$(TargetPlatform)' == 'Mac') or ('$(TargetPlatform)' == 'Linux')" />
            <Property Name="PackageFlag" Value="" />
            <Property Name="PackageFlag" Value="-package" If="('$(TargetPlatform)' == 'IOS') or ('$(TargetPlatform)' == 'Android')" />
            <WriteTextFile File="$(StageDirectory)\Game_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)_RunStage.ps1" Text="param()&#xA;$env:uebp_UATMutexNoWait = &quot;1&quot;&#xA;$env:IsBuildMachine = &quot;1&quot;&#xA;&amp; &quot;$(BuildScriptsLibPath)\Internal_RunUAT.ps1&quot; -UATEnginePath &quot;$(EnginePath)&quot; BuildCookRun &quot;-project=$(UProjectPath)&quot; -nop4 $(DisableCodeSign) &quot;-platform=$(TargetPlatform)&quot; &quot;-clientconfig=$(TargetConfiguration)&quot; -SkipCook -cook -pak $(PackageFlag) -stage &quot;-stagingdirectory=$(StageDirectory)&quot; -unattended -stdlog&#xA;exit $LastExitCode" />
            <Spawn Exe="powershell.exe" Arguments="-ExecutionPolicy Bypass &quot;$(StageDirectory)\Game_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)_RunStage.ps1&quot;" />
            <Tag BaseDir="$(StageDirectory)\$(StagePlatform)" Files="..." With="#GameStaged_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
            <Tag BaseDir="$(ProjectRoot)\Binaries\$(TargetPlatform)" Files="..." With="#GameStaged_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="('$(TargetPlatform)' == 'Android') or ('$(TargetPlatform)' == 'IOS')" />
          </Node>
          <Property Name="GameStaged" Value="$(GameStaged)#GameStaged_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);"  If="!ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')" />
        </ForEach>
      </ForEach>
    </ForEach>

  </Agent>

  <Agent Name="Windows Gauntlet" Type="Win64" If="'$(ExecuteTests)' == 'true'">

    <!-- Run all the defined Gauntlet tests when their dependencies are ready -->
    <ForEach Name="GauntletPairs" Values="$(GauntletTests)" Separator="+">
      <Property Name="GauntletTestName" Value="" />
      <Property Name="GauntletTestRequirements" Value="" />
      <ForEach Name="GauntletPair" Values="$(GauntletPairs)" Separator="~">
        <Switch>
          <Case If="'$(GauntletTestName)' == ''">
            <Property Name="GauntletTestName" Value="$(GauntletPair)" />
          </Case>
          <Default>
            <Property Name="GauntletTestRequirements" Value="$(GauntletPair)" />
          </Default>
        </Switch>
      </ForEach>
      <Node Name="Gauntlet $(GauntletTestName)" Requires="$(GauntletTestRequirements)" If="'$(ExecuteBuild)' == 'true'">
        <WriteTextFile File="$(TempPath)\RunGauntlet.ps1" Text="param()&#xA;&amp; &quot;$(BuildScriptsPath)\Lib\Test_RunGauntletTestFromBuildGraph.ps1&quot; -EnginePath &quot;$(EnginePath)&quot; -Distribution &quot;$(Distribution)&quot; -TestName &quot;$(GauntletTestName)&quot;&#xA;exit $LastExitCode" />
        <Spawn Exe="powershell.exe" Arguments="-ExecutionPolicy Bypass &quot;$(TempPath)\RunGauntlet.ps1&quot;" />
      </Node>
      <Node Name="Gauntlet $(GauntletTestName)" If="'$(ExecuteBuild)' == 'false'">
        <WriteTextFile File="$(TempPath)\RunGauntlet.ps1" Text="param()&#xA;&amp; &quot;$(BuildScriptsPath)\Lib\Test_RunGauntletTestFromBuildGraph.ps1&quot; -EnginePath &quot;$(EnginePath)&quot; -Distribution &quot;$(Distribution)&quot; -TestName &quot;$(GauntletTestName)&quot;&#xA;exit $LastExitCode" />
        <Spawn Exe="powershell.exe" Arguments="-ExecutionPolicy Bypass &quot;$(TempPath)\RunGauntlet.ps1&quot;" />
      </Node>
      <Property Name="GauntletTasks" Value="$(GauntletTasks)Gauntlet $(GauntletTestName);"/>
    </ForEach>

  </Agent>

  <Agent Name="Deployment" Type="Win64">

    <ForEach Name="Entry" Values="$(DeploymentSteam)" Separator="+">
      <Property Name="NodeName" Value="" />
      <Property Name="Manual" Value="" />
      <Property Name="PackageType" Value="" />
      <Property Name="PackageTarget" Value="" />
      <Property Name="PackagePlatform" Value="" />
      <Property Name="PackageConfiguration" Value="" />
      <Property Name="SteamAppID" Value="" />
      <Property Name="SteamDepotID" Value="" />
      <Property Name="SteamChannel" Value="" />
      <ForEach Name="EntryValue" Values="$(Entry)">
        <Switch>
          <Case If="'$(NodeName)' == ''">
            <Property Name="NodeName" Value="$(EntryValue)" />
          </Case>
          <Case If="'$(Manual)' == ''">
            <Property Name="Manual" Value="$(EntryValue)" />
          </Case>
          <Case If="'$(PackageType)' == ''">
            <Property Name="PackageType" Value="$(EntryValue)" />
          </Case>
          <Case If="'$(PackageTarget)' == ''">
            <Property Name="PackageTarget" Value="$(EntryValue)" />
          </Case>
          <Case If="'$(PackagePlatform)' == ''">
            <Property Name="PackagePlatform" Value="$(EntryValue)" />
          </Case>
          <Case If="'$(PackageConfiguration)' == ''">
            <Property Name="PackageConfiguration" Value="$(EntryValue)" />
          </Case>
          <Case If="'$(SteamAppID)' == ''">
            <Property Name="SteamAppID" Value="$(EntryValue)" />
          </Case>
          <Case If="'$(SteamDepotID)' == ''">
            <Property Name="SteamDepotID" Value="$(EntryValue)" />
          </Case>
          <Default>
            <Property Name="SteamChannel" Value="$(EntryValue)" />
          </Default>
        </Switch>
      </ForEach>
      <Property Name="ManualMode" Value="Auto" />
      <Property Name="ManualMode" Value="Manual" If="'$(Manual)' == 'true'" />

      <Node Name="Deploy $(ManualMode) $(NodeName)" Requires="#$(PackageType)Staged_$(PackageTarget)_$(PackagePlatform)_$(PackageConfiguration)">
        <Property Name="StagePlatform" Value="$(PackagePlatform)" />
        <Property Name="StagePlatform" Value="Windows" If="'$(StagePlatform)' == 'Win64'" />
        <Property Name="StagePlatform" Value="$(StagePlatform)NoEditor" If="('$(PackageType)' == 'Game' and ('$(StagePlatform)' == 'Windows') or ('$(StagePlatform)' == 'Mac') or ('$(StagePlatform)' == 'Linux')) and '$(IsUnrealEngine5)' == 'false'" />
        <Property Name="StagePlatform" Value="$(StagePlatform)Client" If="('$(PackageType)' == 'Client' and ('$(StagePlatform)' == 'Windows') or ('$(StagePlatform)' == 'Mac') or ('$(StagePlatform)' == 'Linux'))" />
        <Property Name="StagePlatform" Value="$(StagePlatform)Server" If="('$(PackageType)' == 'Server' and ('$(StagePlatform)' == 'Windows') or ('$(StagePlatform)' == 'Mac') or ('$(StagePlatform)' == 'Linux'))" />
        <Spawn Exe="powershell.exe" Arguments="-ExecutionPolicy Bypass -File &quot;$(BuildScriptsLibPath)/Deploy_Steam.ps1&quot; -PackageType &quot;$(PackageType)&quot; -PackageTarget &quot;$(PackageTarget)&quot; -PackagePlatform &quot;$(PackagePlatform)&quot; -PackageConfiguration &quot;$(PackageConfiguration)&quot; -SteamAppID &quot;$(SteamAppID)&quot; -SteamDepotID &quot;$(SteamDepotID)&quot; -SteamChannel &quot;$(SteamChannel)&quot; -StagedData &quot;$(StageDirectory)/$(StagePlatform)&quot;" />
      </Node>
      <Property Name="DeploymentTasks" Value="$(DeploymentTasks)Deploy $(ManualMode) $(NodeName);" />

    </ForEach>

    <ForEach Name="Entry" Values="$(DeploymentCustom)" Separator="+">
      <Property Name="NodeName" Value="" />
      <Property Name="Manual" Value="" />
      <Property Name="PackageType" Value="" />
      <Property Name="PackageTarget" Value="" />
      <Property Name="PackagePlatform" Value="" />
      <Property Name="PackageConfiguration" Value="" />
      <Property Name="CustomDeploymentScriptPath" Value="" />
      <ForEach Name="EntryValue" Values="$(Entry)">
        <Switch>
          <Case If="'$(NodeName)' == ''">
            <Property Name="NodeName" Value="$(EntryValue)" />
          </Case>
          <Case If="'$(Manual)' == ''">
            <Property Name="Manual" Value="$(EntryValue)" />
          </Case>
          <Case If="'$(PackageType)' == ''">
            <Property Name="PackageType" Value="$(EntryValue)" />
          </Case>
          <Case If="'$(PackageTarget)' == ''">
            <Property Name="PackageTarget" Value="$(EntryValue)" />
          </Case>
          <Case If="'$(PackagePlatform)' == ''">
            <Property Name="PackagePlatform" Value="$(EntryValue)" />
          </Case>
          <Case If="'$(PackageConfiguration)' == ''">
            <Property Name="PackageConfiguration" Value="$(EntryValue)" />
          </Case>
          <Default>
            <Property Name="CustomDeploymentScriptPath" Value="$(EntryValue)" />
          </Default>
        </Switch>
      </ForEach>
      <Property Name="ManualMode" Value="Auto" />
      <Property Name="ManualMode" Value="Manual" If="'$(Manual)' == 'true'" />

      <Node Name="Deploy $(ManualMode) $(NodeName)" Requires="#$(PackageType)Staged_$(PackageTarget)_$(PackagePlatform)_$(PackageConfiguration)">
        <Property Name="StagePlatform" Value="$(PackagePlatform)" />
        <Property Name="StagePlatform" Value="Windows" If="'$(StagePlatform)' == 'Win64'" />
        <Property Name="StagePlatform" Value="$(StagePlatform)NoEditor" If="('$(PackageType)' == 'Game' and ('$(StagePlatform)' == 'Windows') or ('$(StagePlatform)' == 'Mac') or ('$(StagePlatform)' == 'Linux')) and '$(IsUnrealEngine5)' == 'false'" />
        <Property Name="StagePlatform" Value="$(StagePlatform)Client" If="('$(PackageType)' == 'Client' and (('$(StagePlatform)' == 'Windows') or ('$(StagePlatform)' == 'Mac') or ('$(StagePlatform)' == 'Linux')))" />
        <Property Name="StagePlatform" Value="$(StagePlatform)Server" If="('$(PackageType)' == 'Server' and (('$(StagePlatform)' == 'Windows') or ('$(StagePlatform)' == 'Mac') or ('$(StagePlatform)' == 'Linux')))" />
        <Spawn Exe="powershell.exe" Arguments="-ExecutionPolicy Bypass -File &quot;$(RepositoryRoot)/$(CustomDeploymentScriptPath)&quot; -PackageType &quot;$(PackageType)&quot; -PackageTarget &quot;$(PackageTarget)&quot; -PackagePlatform &quot;$(PackagePlatform)&quot; -PackageConfiguration &quot;$(PackageConfiguration)&quot; -EnginePath &quot;$(EnginePath)&quot; -StageDirectory &quot;$(StageDirectory)&quot; -PackageDirectory &quot;$(StageDirectory)/$(StagePlatform)&quot;" />
      </Node>
      <Property Name="DeploymentTasks" Value="$(DeploymentTasks)Deploy $(ManualMode) $(NodeName);" />

    </ForEach>

  </Agent>

  <!-- Targets that we will execute on a Windows machine. -->
  <Agent Name="Windows Tag" Type="Win64">

    <!-- Node that we just use to easily execute all required nodes -->
    <Node Name="End" Requires="$(GameStaged);$(ClientStaged);$(ServerStaged);$(GauntletTasks);$(CustomTasks);$(DeploymentTasks)">
    </Node>

  </Agent>

</BuildGraph>
